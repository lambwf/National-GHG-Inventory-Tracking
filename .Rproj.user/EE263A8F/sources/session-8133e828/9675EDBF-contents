---
title: "read_crts"
output: html_document
date: "`r Sys.Date()`"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

rm(list=ls())
library(openxlsx)
library(tidyverse)
library(countrycode)
library(zoo)


## download files from https://unfccc.int/ghg-inventories-annex-i-parties/2024


```

```{r get_files}

files_countries <- data.frame(dir=list.files(path = "sources/CRTs/"))
files_countries <- files_countries %>% 
  mutate(country = str_extract(dir, "^.{3}")) %>% 
  mutate(year_submission = str_extract(dir, "\\d{4}"))
files_crts = data.frame(country=NA,year_submission=NA,dir=NA,files=NA,file_year=NA)

for (i in 2:length(files_countries$dir)) {
  
  files <- data.frame(files=list.files(path = paste0("sources/CRTs/",files_countries$dir[i])))
  files <- files %>% 
    mutate(all_years = map(files, ~ str_extract_all(.x, "\\b\\d{4}\\b")[[1]])) %>% 
    mutate(file_year = map_chr(all_years, ~ .x[2])) %>% 
    select(-all_years) %>% 
    filter(!is.na(file_year)) %>% 
    mutate(dir=files_countries$dir[i]) %>% 
    mutate(country=files_countries$country[i]) %>% 
    mutate(year_submission=files_countries$year_submission[i])
  
  files_crts <- rbind(files_crts,files)
  
  rm(files)
}

rm(files_countries)
files_crts <- files_crts %>% filter(!is.na(country))
```

```{r get_summary_reports}

# Table10s1, Table10s2, Table10s3, Table10s4, Table10s5, Table10s6
# Don't know GWP

#data_crts <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)

## for the summary sheets we only need the file for the latest year
data_files = files_crts %>% filter(file_year==max(files_crts$file_year))
data_crts = data.frame()


for (i in 1:length(data_files$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
                       sheet = paste0("Table10s1"),
                       startRow = 8) %>%
    select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>% 
    mutate(units = "ktCO2e") %>% 
    mutate(gas = "ghg")
  
  
  table_2 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
                       sheet = paste0("Table10s2"),
                       startRow = 8) %>%
    select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>% 
    mutate(units = "ktCO2") %>% 
    mutate(gas = "co2")
  
  
  table_3 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
                       sheet = paste0("Table10s3"),
                       startRow = 8) %>%
    select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>% 
    mutate(units = "ktCH4e") %>% 
    mutate(gas = "ch4")
  
  
  table_4 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
                       sheet = paste0("Table10s4"),
                       startRow = 8) %>%
    select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>% 
    mutate(units = "ktN2O") %>% 
    mutate(gas = "n2o")
  
  
  table_5 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
                       sheet = paste0("Table10s5"),
                       startRow = 8) %>%
    select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>% 
    mutate(units = "ktCO2e") %>% 
    mutate(gas = "fgases")
  
  
  table_6 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
                       sheet = paste0("Table10s6"),
                       startRow = 8) %>%
    select("GREENHOUSE.GAS.EMISSIONS.AND.REMOVALS",`1990`:`2022`) %>% 
    mutate(units = "ktCO2e") %>% 
    mutate(gas = "totals")
  
  
  ## fix up f-gas table
  table_5 <- table_5 %>% 
    mutate(gas=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES) %>% 
    mutate(GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES="2.F. Product uses as substitutes for ODS")
  
  table_5 <- table_5 %>% 
    filter(gas %in% c("Emissions of HFCs -  CO2 equivalents (kt) (3)",
                      "Emissions of PFCs -  CO2 equivalents (kt) ",
                      "Emissions of  SF6 -  CO2 equivalents (kt) (3)",
                      "Emissions of NF3 - CO2 equivalents (kt) (3)")) %>% 
    mutate(gas=ifelse(grepl("HFCs",gas),"HFCs",gas)) %>% 
    mutate(gas=ifelse(grepl("PFCs",gas),"PFCs",gas)) %>% 
    mutate(gas=ifelse(grepl("SF6",gas),"SF6",gas)) %>% 
    mutate(gas=ifelse(grepl("NF3",gas),"NF3",gas))
  
  
  ## merge co2, ch4, n2o
  table <- bind_rows(table_2,table_3,table_4,table_5)
  table <- table %>% 
    select(sector=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES,gas,units,everything()) %>% 
    filter(!is.na(sector)) %>% 
    filter(!grepl("Note:",sector))
  table <- gather(table,year,value,-sector,-gas,-units)
  
  
  ## deal with NA, NO, IE, NE
  table <- table %>% 
    mutate(value=ifelse(grepl("NA",value),NA,value)) %>% 
    mutate(value=ifelse(grepl("NO",value),0,value))
  
  
  ## extract sector codes
  table <- table %>% 
    mutate(sector_code=sub("^(\\S+)\\s.*", "\\1", sector)) %>% 
    mutate(sector=sub("^\\S+\\s(.*)", "\\1", sector))
  
  
  ## remove memo items etc.
  table <- table %>% 
    filter(!sector_code %in% c("Memo","Indirect","Total")) %>% 
    filter(!grepl("1.D.",sector_code)) %>% 
    filter(!grepl("5.F.1.",sector_code))
  
  
  ## remove spaces at the beginning of categories
  table$sector <- gsub("^\\s+", "", table$sector)
  
  
  ## extract the emissions hierarchy (just the level associated with each sector)
  table <- table %>%
    mutate(sector_level = map_int(sector_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## clean up
  table <- table %>% 
    mutate(iso=data_files$country[i]) %>% 
    select(iso,sector_code,sector_description=sector,sector_level,gas,units,year,value) %>%
    mutate(value=as.numeric(value)) %>% 
    mutate(year=as.numeric(year))
  
  
  ## bind to dataset
  data_crts <- bind_rows(data_crts,table)
  
  
}

```

``` {r clean_summary_reports}

## put emissions into a clean format with no double counting and organised sectors 
## check that different levels in the hierarchy add up

data_crts <- data_crts %>% 
  arrange(iso,sector_code,sector_description,sector_level,gas,units,year)


## remove trailing spaces in sector descriptions, text within round brackets
data_crts$sector_description <- gsub("\\s+$", "", data_crts$sector_description) 
data_crts$sector_code <- gsub("\\s+$", "", data_crts$sector_code) 
data_crts$sector_description <- gsub("\\(.*?\\)", "", data_crts$sector_description)


## identify leaf nodes

sectors <- data_crts %>% select(sector_code,sector_level,sector_description) %>% distinct()
sectors <- sectors %>%
  mutate(is_leaf = !sapply(sector_code, function(code) {
    any(str_detect(setdiff(sector_code, code), paste0("^", str_replace_all(code, "\\.", "\\\\."))))
  }))


## propagate sector_lv1
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,1)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==1) %>%
              mutate(match=substr(sector_code,1,1)) %>% 
              select(match,sector_lv1=sector_description),
            by = join_by(match)) %>% 
  select(-match)


## propagate sector_lv2
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,3)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==2) %>%
              mutate(match=substr(sector_code,1,3)) %>% 
              select(match,sector_lv2=sector_description),
            by = join_by(match)) %>% 
  select(-match)


## clean up sectors (no double counting, all codes separate)
sectors <- sectors %>% 
  filter(is_leaf==TRUE) %>% 
  mutate(sector_lv2=ifelse(sector_lv2=="Other",paste0(sector_lv2," (",sector_lv1,")"),sector_lv2)) %>% 
  mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>% 
  mutate(sector_lv3=sector_description) %>% 
  mutate(sector_lv3=ifelse(sector_lv3=="Other",paste0(sector_lv3," (",sector_lv1,")"),sector_lv3)) %>% 
  select(-sector_description,-is_leaf)


## rejoin
data_crts <- left_join(data_crts,sectors,by=join_by(sector_code,sector_level))
data_crts_totals <- data_crts %>% filter(is.na(sector_lv1))


## are totals correct at lv1?
data_crts_test <- data_crts %>% 
  filter(!is.na(sector_lv1)) %>% 
  group_by(iso,sector_lv1,gas,units,year) %>% 
  summarise(value=sum(value,na.rm=TRUE))

data_crts_test <- left_join(data_crts_test,data_crts_totals %>%
                              select(iso,gas,units,year,sector_lv1=sector_description,value_totals=value)) %>% 
  mutate(check = value-value_totals) %>% 
  filter(is.na(check))


## tidy up sector hierarchy
data_crts <- data_crts %>% filter(!is.na(sector_lv1))



######################### for now exclude f-gases (need to figure gwps etc.)
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10) %>% select(gas=Species,gwp100=AR6GWP100) %>% mutate(gas=tolower(gas))

data_crts <- data_crts %>% 
  filter(gas %in% c("co2","ch4","n2o")) %>% 
  left_join(.,gwps,by="gas")

data_crts <- data_crts %>%  
  mutate(gwp100=ifelse(gas=="co2",1,gwp100)) %>% 
  mutate(value_gwp100=value*gwp100)


######################### I guess to check: are units always in kt ? #########################




## tidy up file
data_crts <- data_crts %>% 
  filter(!is.na(sector_lv1)) %>% 
  mutate(source="UNFCCC CRT 2024") %>% 
  select(source,iso,sector_code,sector_level,sector_lv1,sector_lv2,sector_lv3,gas,units,gwp100,year,value,value_gwp100)





```





```{r get_activity_data_energy}


data_crts_activity <- data.frame()


for (i in 1:length(files_crts$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s1"),
                       startRow = 7)
  
  table_2 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s2"),
                       startRow = 7)
  
  table_3 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s3"),
                       startRow = 7) %>% mutate(blarg=NA)
  
  table_4 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s4"),
                       startRow = 7)
  
  
  names(table_1) <- c("category","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  names(table_2) <- c("category","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  names(table_3) <- c("category","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  names(table_4) <- c("category","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  
  
  table_1 <- table_1 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>% 
    filter(!grepl("Note:",category))
  
  table_2 <- table_2 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>% 
    filter(!grepl("Note:",category))
  
  table_3 <- table_3 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>% 
    filter(!grepl("Note:",category))
  
  table_4 <- table_4 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>% 
    filter(!grepl("Note:",category))
  
  
  ## remove footnotes
  table_4 <- table_4 %>% mutate(remove=ifelse(grepl("Information item",category),"yes",NA))
  table_4$remove <- na.locf(table_4$remove,na.rm=FALSE)
  table_4 <- table_4 %>% 
    filter(is.na(remove)) %>% 
    select(-remove)
  
  
  ## join tables
  table <- bind_rows(table_1,table_2,table_3,table_4)
  
  
  ## extract and propagate category codes
  table <- table %>% 
    mutate(fuel=category) %>%
    mutate(category=ifelse(!grepl("Liquid fuels|Solid fuels|Gaseous fuels|Other fossil fuels|Peat|Biomass|Aviation gasoline|Jet kerosene|Gasoline|Diesel oil|Liquefied petroleum gases|^Other liquid fuels$|Residual fuel oil|Gas/diesel oil",fuel),fuel,NA))
  
  table <- table %>% 
    mutate(category_code=sub("^(\\S+)\\s.*", "\\1", category))
  
  table <- table %>% 
    mutate(category_code=ifelse(grepl("^[0-9]",category_code),category_code,NA))
  
  
  table$category_code <- na.locf(table$category_code)
  
  table <- table %>% 
    mutate(category=ifelse(grepl("^[0-9]",category),sub("^\\S+\\s(.*)", "\\1", category),category))
  
  table$category <- na.locf(table$category)
  
  
  ## Clean up fuels
  table <- table %>% 
    mutate(fuel = ifelse(grepl("Liquid fuels|Solid fuels|Gaseous fuels|Other fossil fuels|Peat|Biomass|Aviation gasoline|Jet kerosene|Gasoline|Diesel oil|Liquefied petroleum gases|^Other liquid fuels$|Residual fuel oil|Gas/diesel oil",fuel),fuel,"Total"))
  
  table <- table %>% 
    mutate(category_description = paste0(category," | ",fuel))
  
  
  ## remove spaces at the beginning of categories
  table$category_description <- gsub("^\\s+", "", table$category_description)
  
  
  ## replace "NO"s with zeros (also what does IE mean?)
  
  
  ## extract the emissions hierarchy (just the level associated with each category)
  table <- table %>%
    mutate(category_level = map_int(category_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## join country and year
  table <- table %>% 
    mutate(iso=files_crts$country[i]) %>% 
    mutate(year=files_crts$file_year[i])
  
  
  ## organise and join
  table <- table %>% 
    select(iso,category_code,category_level,category_description,year,everything(),-category) 
  data_crts_activity <- bind_rows(data_crts_activity,table)
  
}

#blarg <- data_crts_activity %>% filter(iso=="RUS",category_description=="Public electricity and heat production (9) | Total")
save(data_crts_activity,file="data/data_crts_activity.RData")


```

```{r get_activity_data_industry}


for (i in 1:length(files_crts$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table2(I).A-H"),
                       startRow = 7)
  
  
  names(table_1) <- c("category","activity_unit","activity","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2","captured_co2b","captured_ch4","captured_n2o")
  
  
  table_1 <- table_1 %>% 
    mutate(activity_unit=ifelse(!is.na(activity_unit),paste0(activity_unit," (kt)"),activity_unit)) %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>%
    filter(category!="SINK CATEGORIES")
  
  
  ## remove footnotes starting with "(1) ..."
  table_1 <- table_1 %>% 
    mutate(remove=NA) %>% 
    mutate(remove=ifelse(grepl("^\\(1\\)",category),"yes",NA))
  table_1$remove <- na.locf(table_1$remove,na.rm=FALSE)
  table_1 <- table_1 %>% 
    filter(is.na(remove)) %>% 
    select(-remove)
  
  
  ## extract category codes
  table <- table_1 %>% 
    mutate(category_code=sub("^(\\S+)\\s.*", "\\1", category)) %>% 
    mutate(category=sub("^\\S+\\s(.*)", "\\1", category)) %>% 
    mutate(category_code=ifelse(grepl("^[^0-9]",category_code),NA,category_code)) %>% 
    mutate(temp=na.locf(category_code)) %>% 
    mutate(category_code=ifelse(is.na(category_code),paste0(temp,"i"),category_code)) %>% 
    select(-temp)
  
  
  ## fix a typo where some descriptions are joined to the category_code
  table$category_code <- gsub("Other","",table$category_code)
  
  
  ## remove spaces at the beginning of categories
  table$category <- gsub("^\\s+", "", table$category)
  
  
  ## replace "NO"s with zeros (also what does IE mean?)
  
  
  ## extract the emissions hierarchy (just the level associated with each category)
  table <- table %>%
    mutate(category_level = map_int(category_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## join country and year
  table <- table %>% 
    mutate(iso=files_crts$country[i]) %>% 
    mutate(year=files_crts$file_year[i])
  
  
  ## organise
  table <- table %>% 
    select(iso,category_code,category_level,category_description=category,year,everything()) 
  
  
  data_crts_activity <- bind_rows(data_crts_activity,table)
  
}


```

```{r get_activity_data_agriculture}

for (i in 1:length(files_crts$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table2(I).A-H"),
                       startRow = 7)
  
  
  names(table_1) <- c("category","activity_unit","activity","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2","captured_co2b","captured_ch4","captured_n2o")
  
  
  table_1 <- table_1 %>% 
    mutate(activity_unit=ifelse(!is.na(activity_unit),paste0(activity_unit," (kt)"),activity_unit)) %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>%
    filter(category!="SINK CATEGORIES")
  
  
  ## remove footnotes starting with "(1) ..."
  table_1 <- table_1 %>% 
    mutate(remove=NA) %>% 
    mutate(remove=ifelse(grepl("^\\(1\\)",category),"yes",NA))
  table_1$remove <- na.locf(table_1$remove,na.rm=FALSE)
  table_1 <- table_1 %>% 
    filter(is.na(remove)) %>% 
    select(-remove)
  
  
  ## extract category codes
  table <- table_1 %>% 
    mutate(category_code=sub("^(\\S+)\\s.*", "\\1", category)) %>% 
    mutate(category=sub("^\\S+\\s(.*)", "\\1", category)) %>% 
    mutate(category_code=ifelse(grepl("^[^0-9]",category_code),NA,category_code)) %>% 
    mutate(temp=na.locf(category_code)) %>% 
    mutate(category_code=ifelse(is.na(category_code),paste0(temp,"i"),category_code)) %>% 
    select(-temp)
  
  
  ## fix a typo where some descriptions are joined to the category_code
  table$category_code <- gsub("Other","",table$category_code)
  
  
  ## remove spaces at the beginning of categories
  table$category <- gsub("^\\s+", "", table$category)
  
  
  ## replace "NO"s with zeros (also what does IE mean?)
  
  
  ## extract the emissions hierarchy (just the level associated with each category)
  table <- table %>%
    mutate(category_level = map_int(category_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## join country and year
  table <- table %>% 
    mutate(iso=files_crts$country[i]) %>% 
    mutate(year=files_crts$file_year[i])
  
  
  ## organise
  table <- table %>% 
    select(iso,category_code,category_level,category_description=category,year,everything()) 
  
  
  data_crts_activity <- bind_rows(data_crts_activity,table)
  
}

```

```{r clean_hierarchy}

# blarg <- table %>% select(category_code,category_level,category_description) %>% distinct()
# for (i in 1:max(blarg$category_level)) {
#   
#   column_name <- paste0("level_", i+1)
#   blarg <- blarg %>% mutate(!!column_name := substr(category_code, 1, i + 2))
#   
#   
# }

```
