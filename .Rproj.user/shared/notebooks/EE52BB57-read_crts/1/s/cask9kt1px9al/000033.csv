"0",""
"0","## put emissions into a clean format with no double counting and organised sectors "
"0","## check that different levels in the hierarchy add up"
"0",""
"0","data_crts <- data_crts %>% "
"0","  arrange(iso,sector_code,sector_description,sector_level,gas,units,year)"
"0",""
"0",""
"0","## remove trailing spaces in sector descriptions, text within round brackets"
"0","data_crts$sector_description <- gsub(""\\s+$"", """", data_crts$sector_description) "
"0","data_crts$sector_code <- gsub(""\\s+$"", """", data_crts$sector_code) "
"0","data_crts$sector_description <- gsub(""\\(.*?\\)"", """", data_crts$sector_description)"
"0",""
"0",""
"0","## identify leaf nodes"
"0",""
"0","sectors <- data_crts %>% select(sector_code,sector_level,sector_description) %>% distinct()"
"0","sectors <- sectors %>%"
"0","  mutate(is_leaf = !sapply(sector_code, function(code) {"
"0","    any(str_detect(setdiff(sector_code, code), paste0(""^"", str_replace_all(code, ""\\."", ""\\\\.""))))"
"0","  }))"
"0",""
"0",""
"0","## propagate sector_lv1"
"0","sectors <- sectors %>% "
"0","  mutate(match = substr(sector_code,1,1)) %>% "
"0","  left_join(.,sectors %>% "
"0","              filter(sector_level==1) %>%"
"0","              mutate(match=substr(sector_code,1,1)) %>% "
"0","              select(match,sector_lv1=sector_description),"
"0","            by = join_by(match)) %>% "
"0","  select(-match)"
"0",""
"0",""
"0","## propagate sector_lv2"
"0","sectors <- sectors %>% "
"0","  mutate(match = substr(sector_code,1,3)) %>% "
"0","  left_join(.,sectors %>% "
"0","              filter(sector_level==2) %>%"
"0","              mutate(match=substr(sector_code,1,3)) %>% "
"0","              select(match,sector_lv2=sector_description),"
"0","            by = join_by(match)) %>% "
"0","  select(-match)"
"0",""
"0",""
"0","## clean up sectors (no double counting, all codes separate)"
"0","sectors <- sectors %>% "
"0","  filter(is_leaf==TRUE) %>% "
"0","  mutate(sector_lv2=ifelse(sector_lv2==""Other"",paste0(sector_lv2,"" ("",sector_lv1,"")""),sector_lv2)) %>% "
"0","  mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>% "
"0","  mutate(sector_lv3=sector_description) %>% "
"0","  mutate(sector_lv3=ifelse(sector_lv3==""Other"",paste0(sector_lv3,"" ("",sector_lv1,"")""),sector_lv3)) %>% "
"0","  select(-sector_description,-is_leaf)"
"0",""
"0",""
"0","## rejoin"
"0","data_crts <- left_join(data_crts,sectors,by=join_by(sector_code,sector_level))"
"0","data_crts_totals <- data_crts %>% filter(is.na(sector_lv1))"
"0",""
"0",""
"0","## are totals correct at lv1?"
"0","data_crts_test <- data_crts %>% "
"0","  filter(!is.na(sector_lv1)) %>% "
"0","  group_by(iso,sector_lv1,gas,units,year) %>% "
"0","  summarise(value=sum(value,na.rm=TRUE))"
"2","`summarise()` has grouped output by 'iso', 'sector_lv1', 'gas', 'units'. You can override using the `.groups` argument."
"0","data_crts_test <- left_join(data_crts_test,data_crts_totals %>%"
"0","                              select(iso,gas,units,year,sector_lv1=sector_description,value_totals=value)) %>% "
"0","  mutate(check = value-value_totals) %>% "
"0","  filter(is.na(check))"
"2","Joining with `by = join_by(iso, sector_lv1, gas, units, year)`"
"0","## tidy up sector hierarchy"
"0","data_crts <- data_crts %>% filter(!is.na(sector_lv1))"
"0",""
"0",""
"0","## join AR5 GWPs"
"0","gwps <- read.csv(""https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv"",skip = 10) %>% select(gas=Species,gwp100_ar5=AR5GWP100) %>% mutate(gas=tolower(gas))"
"0",""
"0","data_crts <- data_crts %>% "
"0","  left_join(.,gwps,by=""gas"")"
"0",""
"0","data_crts <- data_crts %>% "
"0","  mutate(gwp100_ar5=ifelse(!gas %in% c(""ch4"",""n2o""),1,gwp100_ar5)) %>% "
"0","  mutate(value_gwp100=value*gwp100_ar5)"
"0",""
"0",""
"0","## check units are in kt and convert to t"
"0",""
"0","data_crts <- data_crts %>% "
"0","  {if (any(!str_starts(.$units, ""kt""))) stop(""Error: Not all values in the 'units' column start with 'kt'"")"
"0","    else ."
"0","  } %>%"
"0","  mutate(value = value / 1000)"
"0",""
"0","data_crts <- data_crts %>% "
"0","  mutate(units=""tCO2e (GWP100 AR5)"") %>% "
"0","  select(-gwp100_ar5,-value) %>% "
"0","  rename(value=value_gwp100)"
"0",""
"0",""
"0","## set levels and arrange"
"0","data_crts$gas <- as.factor(data_crts$gas)"
"0","data_crts$gas <- factor(data_crts$gas,levels=c(""co2"",""ch4"",""n2o"",""hfcs"",""pfcs"",""nf3"",""sf6""))"
"0",""
"0","data_crts <- data_crts %>% arrange(across(-ncol(data_crts)))"
"0",""
"0",""
"0","## tidy up file"
"0","data_crts <- data_crts %>% "
"0","  filter(!is.na(sector_lv1)) %>% "
"0","  mutate(source=""UNFCCC CRT 2024"") %>% "
"0","  select(source,iso,sector_code,sector_level,sector_lv1,sector_lv2,sector_lv3,gas,units,year,value)"
"0",""
"0",""
