"0","
data_crts <- data_crts %>% 
  arrange(iso,sector_code,sector_description,sector_level,gas,units,year)


## remove trailing spaces in sector descriptions, text within round brackets
data_crts$sector_description <- gsub(""\\s+$"", """", data_crts$sector_description) 
data_crts$sector_code <- gsub(""\\s+$"", """", data_crts$sector_code) 
data_crts$sector_description <- gsub(""\\(.*?\\)"", """", data_crts$sector_description)


## identify leaf nodes

sectors <- data_crts %>% select(sector_code,sector_level,sector_description) %>% distinct()
sectors <- sectors %>%
  mutate(is_leaf = !sapply(sector_code, function(code) {
    any(str_detect(setdiff(sector_code, code), paste0(""^"", str_replace_all(code, ""\\."", ""\\\\.""))))
  }))


## propagate sector_lv1
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,1)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==1) %>%
              mutate(match=substr(sector_code,1,1)) %>% 
              select(match,sector_lv1=sector_description),
            by = join_by(match)) %>% 
  select(-match)


## propagate sector_lv2
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,3)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==2) %>%
              mutate(match=substr(sector_code,1,3)) %>% 
              select(match,sector_lv2=sector_description),
            by = join_by(match)) %>% 
  select(-match)


## clean up sectors (no double counting, all codes separate)
sectors <- sectors %>% 
  filter(is_leaf==TRUE) %>% 
  mutate(sector_lv2=ifelse(sector_lv2==""Other"",paste0(sector_lv2,"" ("",sector_lv1,"")""),sector_lv2)) %>% 
  mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>% 
  mutate(sector_lv3=sector_description) %>% 
  mutate(sector_lv3=ifelse(sector_lv3==""Other"",paste0(sector_lv3,"" ("",sector_lv1,"")""),sector_lv3)) %>% 
  select(-sector_description,-is_leaf)


## rejoin
data_crts <- left_join(data_crts,sectors,by=join_by(sector_code,sector_level))
data_crts_totals <- data_crts %>% filter(is.na(sector_lv1))


## are totals correct at lv1?
data_crts_test <- data_crts %>% 
  filter(!is.na(sector_lv1)) %>% 
  group_by(iso,sector_lv1,gas,units,year) %>% 
  summarise(value=sum(value,na.rm=TRUE))
"
"2","`summarise()` has grouped output by 'iso', 'sector_lv1', 'gas', 'units'. You can override using the `.groups` argument."
"0",""
"0","data_crts_test <- left_join(data_crts_test,data_crts_totals %>%"
"0","                              select(iso,gas,units,year,sector_lv1=sector_description,value_totals=value)) %>% "
"0","  mutate(check = value-value_totals) %>% "
"0","  filter(is.na(check))"
"2","Joining with `by = join_by(iso, sector_lv1, gas, units, year)`"
"0","## tidy up sector hierarchy"
"0","data_crts <- data_crts %>% filter(!is.na(sector_lv1))"
"0",""
"0",""
"0","## join AR5 GWPs"
"0","gwps <- read.csv(""https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv"",skip = 10) %>% select(gas=Species,gwp100_ar5=AR5GWP100) %>% mutate(gas=tolower(gas))"
"0",""
"0","data_crts <- data_crts %>% "
"0","  left_join(.,gwps,by=""gas"")"
"0",""
"0","data_crts <- data_crts %>% "
"0","  mutate(gwp100_ar5=ifelse(!gas %in% c(""ch4"",""n2o""),1,gwp100_ar5)) %>% "
"0","  mutate(value_gwp100=value*gwp100_ar5)"
"0",""
"0",""
"0","## check units are in kt and convert to t"
"0",""
"0","data_crts <- data_crts %>% "
"0","  {if (any(!str_starts(.$units, ""kt""))) stop(""Error: Not all values in the 'units' column start with 'kt'"")"
"0","    else ."
"0","  } %>%"
"0","  mutate(value = value / 1000)"
"0",""
"0","data_crts <- data_crts %>% "
"0","  mutate(units=""tCO2e (GWP100 AR5)"") %>% "
"0","  select(-gwp100_ar5,-value) %>% "
"0","  rename(value=value_gwp100)"
"0",""
