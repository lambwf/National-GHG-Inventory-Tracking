mutate(sector_level = map_int(sector_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
## clean up
table <- table %>%
mutate(iso=data_files$country[i]) %>%
select(iso,sector_code,sector_description=sector,sector_level,gas,units,year,value) %>%
mutate(value=as.numeric(value)) %>%
mutate(year=as.numeric(year))
## bind to dataset
data_crts <- bind_rows(data_crts,table)
}
data_crts <- data_crts %>%
arrange(iso,sector_code,sector_description,sector_level,gas,units,year)
## remove trailing spaces in sector descriptions, text within round brackets
data_crts$sector_description <- gsub("\\s+$", "", data_crts$sector_description)
data_crts$sector_code <- gsub("\\s+$", "", data_crts$sector_code)
data_crts$sector_description <- gsub("\\(.*?\\)", "", data_crts$sector_description)
## identify leaf nodes
sectors <- data_crts %>% select(sector_code,sector_level,sector_description) %>% distinct()
sectors <- sectors %>%
mutate(is_leaf = !sapply(sector_code, function(code) {
any(str_detect(setdiff(sector_code, code), paste0("^", str_replace_all(code, "\\.", "\\\\."))))
}))
## propagate sector_lv1
sectors <- sectors %>%
mutate(match = substr(sector_code,1,1)) %>%
left_join(.,sectors %>%
filter(sector_level==1) %>%
mutate(match=substr(sector_code,1,1)) %>%
select(match,sector_lv1=sector_description),
by = join_by(match)) %>%
select(-match)
## propagate sector_lv2
sectors <- sectors %>%
mutate(match = substr(sector_code,1,3)) %>%
left_join(.,sectors %>%
filter(sector_level==2) %>%
mutate(match=substr(sector_code,1,3)) %>%
select(match,sector_lv2=sector_description),
by = join_by(match)) %>%
select(-match)
## clean up sectors (no double counting, all codes separate)
sectors <- sectors %>%
filter(is_leaf==TRUE) %>%
mutate(sector_lv2=ifelse(sector_lv2=="Other",paste0(sector_lv2," (",sector_lv1,")"),sector_lv2)) %>%
mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>%
mutate(sector_lv3=sector_description) %>%
mutate(sector_lv3=ifelse(sector_lv3=="Other",paste0(sector_lv3," (",sector_lv1,")"),sector_lv3)) %>%
select(-sector_description,-is_leaf)
## rejoin
data_crts <- left_join(data_crts,sectors,by=join_by(sector_code,sector_level))
data_crts_totals <- data_crts %>% filter(is.na(sector_lv1))
## are totals correct at lv1?
data_crts_test <- data_crts %>%
filter(!is.na(sector_lv1)) %>%
group_by(iso,sector_lv1,gas,units,year) %>%
summarise(value=sum(value,na.rm=TRUE))
data_crts_test <- left_join(data_crts_test,data_crts_totals %>%
select(iso,gas,units,year,sector_lv1=sector_description,value_totals=value)) %>%
mutate(check = value-value_totals) %>%
filter(is.na(check))
## tidy up sector hierarchy
data_crts <- data_crts %>% filter(!is.na(sector_lv1))
######################### join AR5 GWPs
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10) %>% select(gas=Species,gwp100_ar5=AR5GWP100) %>% mutate(gas=tolower(gas))
data_crts <- data_crts %>%
#filter(gas %in% c("co2","ch4","n2o")) %>%
left_join(.,gwps,by="gas")
data_crts <- data_crts %>%
left_join(.,gwps,by="gas") %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100))
data_crts <- data_crts %>%
left_join(.,gwps,by="gas") %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5))
data_crts <- data_crts %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5))
data_crts <- data_crts %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5)) %>%
mutate(value_gwp100=value*gwp100)
data_crts <- data_crts %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5)) %>%
mutate(value_gwp100=value*gwp100_ar5)
blarg <- unique(data_crts$units)
data_crts <- data_crts %>%
{if (any(!str_starts(.$gas, "kt"))) stop("Error: Not all values in the 'gas' column start with 'kt'")
else .
} %>%
mutate(value = value / 1000)
data_crts <- data_crts %>%
{if (any(!str_starts(.$units, "kt"))) stop("Error: Not all values in the 'gas' column start with 'kt'")
else .
} %>%
mutate(value = value / 1000)
data_crts <- data_crts %>%
mutate(units="tCO2e (GWP100 AR5)") %>%
select(-gwp100_ar5,value) %>%
rename(value=value_gwp100)
data_crts <- data_crts %>%
mutate(units="tCO2e (GWP100 AR5)") %>%
select(-gwp100_ar5,-value) %>%
rename(value=value_gwp100)
## tidy up file
data_crts <- data_crts %>%
filter(!is.na(sector_lv1)) %>%
mutate(source="UNFCCC CRT 2024") %>%
select(source,iso,sector_code,sector_level,sector_lv1,sector_lv2,sector_lv3,gas,units,year,value)
ncol(data_crts)
-ncol(data_crts)
data_crts <- data_crts %>%
arrange(across(-ncol(data_crts)))
## set levels and arrange
data_crts$gas <- as.factor(data_crts$gas)
data_crts$gas <- levels(data_crts$gas,"co2","ch4","n2o")
data_crts$gas <- factor(data_crts$gas,"co2","ch4","n2o")
data_crts$gas
## set levels and arrange
data_crts$gas <- as.factor(data_crts$gas)
data_crts$gas <- factor(data_crts$gas,levels=c("co2","ch4","n2o"))
data_crts$gas
unique(data_crts$gas)
# Table10s1, Table10s2, Table10s3, Table10s4, Table10s5, Table10s6
# Assume GWP is always AR5
#data_crts <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
## for the summary sheets we only need the file for the latest year
data_files = files_crts %>% filter(file_year==max(files_crts$file_year))
data_crts = data.frame()
for (i in 1:length(data_files$country)) {
table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s1"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "ghg")
table_2 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s2"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCO2") %>%
mutate(gas = "co2")
table_3 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s3"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCH4e") %>%
mutate(gas = "ch4")
table_4 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s4"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktN2O") %>%
mutate(gas = "n2o")
table_5 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s5"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "fgases")
table_6 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s6"),
startRow = 8) %>%
select("GREENHOUSE.GAS.EMISSIONS.AND.REMOVALS",`1990`:`2022`) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "totals")
## fix up f-gas table
table_5 <- table_5 %>%
mutate(gas=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES) %>%
mutate(GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES="2.F. Product uses as substitutes for ODS")
table_5 <- table_5 %>%
filter(gas %in% c("Emissions of HFCs -  CO2 equivalents (kt) (3)",
"Emissions of PFCs -  CO2 equivalents (kt) ",
"Emissions of  SF6 -  CO2 equivalents (kt) (3)",
"Emissions of NF3 - CO2 equivalents (kt) (3)")) %>%
mutate(gas=ifelse(grepl("HFCs",gas),"HFCs",gas)) %>%
mutate(gas=ifelse(grepl("PFCs",gas),"PFCs",gas)) %>%
mutate(gas=ifelse(grepl("SF6",gas),"SF6",gas)) %>%
mutate(gas=ifelse(grepl("NF3",gas),"NF3",gas))
## merge co2, ch4, n2o, fgases
table <- bind_rows(table_2,table_3,table_4,table_5)
table <- table %>%
select(sector=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES,gas,units,everything()) %>%
filter(!is.na(sector)) %>%
filter(!grepl("Note:",sector))
table <- gather(table,year,value,-sector,-gas,-units)
## deal with NA, NO, IE, NE
table <- table %>%
mutate(value=ifelse(grepl("NA",value),NA,value)) %>%
mutate(value=ifelse(grepl("IE",value),NA,value)) %>%
mutate(value=ifelse(grepl("NE",value),NA,value)) %>%
mutate(value=ifelse(grepl("NO",value),0,value))
## extract sector codes
table <- table %>%
mutate(sector_code=sub("^(\\S+)\\s.*", "\\1", sector)) %>%
mutate(sector=sub("^\\S+\\s(.*)", "\\1", sector))
## remove memo items etc.
table <- table %>%
filter(!sector_code %in% c("Memo","Indirect","Total")) %>%
filter(!grepl("1.D.",sector_code)) %>%
filter(!grepl("5.F.1.",sector_code))
## remove spaces at the beginning of categories
table$sector <- gsub("^\\s+", "", table$sector)
## extract the emissions hierarchy (just the level associated with each sector)
table <- table %>%
mutate(sector_level = map_int(sector_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
## clean up
table <- table %>%
mutate(iso=data_files$country[i]) %>%
select(iso,sector_code,sector_description=sector,sector_level,gas,units,year,value) %>%
mutate(value=as.numeric(value)) %>%
mutate(year=as.numeric(year))
## bind to dataset
data_crts <- bind_rows(data_crts,table)
}
data_crts <- data_crts %>%
arrange(iso,sector_code,sector_description,sector_level,gas,units,year)
## remove trailing spaces in sector descriptions, text within round brackets
data_crts$sector_description <- gsub("\\s+$", "", data_crts$sector_description)
data_crts$sector_code <- gsub("\\s+$", "", data_crts$sector_code)
data_crts$sector_description <- gsub("\\(.*?\\)", "", data_crts$sector_description)
## identify leaf nodes
sectors <- data_crts %>% select(sector_code,sector_level,sector_description) %>% distinct()
sectors <- sectors %>%
mutate(is_leaf = !sapply(sector_code, function(code) {
any(str_detect(setdiff(sector_code, code), paste0("^", str_replace_all(code, "\\.", "\\\\."))))
}))
## propagate sector_lv1
sectors <- sectors %>%
mutate(match = substr(sector_code,1,1)) %>%
left_join(.,sectors %>%
filter(sector_level==1) %>%
mutate(match=substr(sector_code,1,1)) %>%
select(match,sector_lv1=sector_description),
by = join_by(match)) %>%
select(-match)
## propagate sector_lv2
sectors <- sectors %>%
mutate(match = substr(sector_code,1,3)) %>%
left_join(.,sectors %>%
filter(sector_level==2) %>%
mutate(match=substr(sector_code,1,3)) %>%
select(match,sector_lv2=sector_description),
by = join_by(match)) %>%
select(-match)
## clean up sectors (no double counting, all codes separate)
sectors <- sectors %>%
filter(is_leaf==TRUE) %>%
mutate(sector_lv2=ifelse(sector_lv2=="Other",paste0(sector_lv2," (",sector_lv1,")"),sector_lv2)) %>%
mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>%
mutate(sector_lv3=sector_description) %>%
mutate(sector_lv3=ifelse(sector_lv3=="Other",paste0(sector_lv3," (",sector_lv1,")"),sector_lv3)) %>%
select(-sector_description,-is_leaf)
## rejoin
data_crts <- left_join(data_crts,sectors,by=join_by(sector_code,sector_level))
data_crts_totals <- data_crts %>% filter(is.na(sector_lv1))
## are totals correct at lv1?
data_crts_test <- data_crts %>%
filter(!is.na(sector_lv1)) %>%
group_by(iso,sector_lv1,gas,units,year) %>%
summarise(value=sum(value,na.rm=TRUE))
data_crts_test <- left_join(data_crts_test,data_crts_totals %>%
select(iso,gas,units,year,sector_lv1=sector_description,value_totals=value)) %>%
mutate(check = value-value_totals) %>%
filter(is.na(check))
## tidy up sector hierarchy
data_crts <- data_crts %>% filter(!is.na(sector_lv1))
## join AR5 GWPs
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10) %>% select(gas=Species,gwp100_ar5=AR5GWP100) %>% mutate(gas=tolower(gas))
data_crts <- data_crts %>%
left_join(.,gwps,by="gas")
data_crts <- data_crts %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5)) %>%
mutate(value_gwp100=value*gwp100_ar5)
data_crts <- data_crts %>%
{if (any(!str_starts(.$units, "kt"))) stop("Error: Not all values in the 'units' column start with 'kt'")
else .
} %>%
mutate(value = value / 1000)
data_crts <- data_crts %>%
mutate(units="tCO2e (GWP100 AR5)") %>%
select(-gwp100_ar5,-value) %>%
rename(value=value_gwp100)
## tidy up file
data_crts <- data_crts %>%
filter(!is.na(sector_lv1)) %>%
mutate(source="UNFCCC CRT 2024") %>%
select(source,iso,sector_code,sector_level,sector_lv1,sector_lv2,sector_lv3,gas,units,year,value)
## set levels and arrange
data_crts$gas <- as.factor(data_crts$gas)
levels(data_crts$gas)
# Table10s1, Table10s2, Table10s3, Table10s4, Table10s5, Table10s6
# Assume GWP is always AR5
#data_crts <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
## for the summary sheets we only need the file for the latest year
data_files = files_crts %>% filter(file_year==max(files_crts$file_year))
data_crts = data.frame()
for (i in 1:length(data_files$country)) {
table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s1"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "ghg")
table_2 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s2"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCO2") %>%
mutate(gas = "co2")
table_3 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s3"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCH4e") %>%
mutate(gas = "ch4")
table_4 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s4"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktN2O") %>%
mutate(gas = "n2o")
table_5 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s5"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",`1990`:`2022`) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "fgases")
table_6 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",data_files$dir[i],"/",data_files$files[i]),
sheet = paste0("Table10s6"),
startRow = 8) %>%
select("GREENHOUSE.GAS.EMISSIONS.AND.REMOVALS",`1990`:`2022`) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "totals")
## fix up f-gas table
table_5 <- table_5 %>%
mutate(gas=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES) %>%
mutate(GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES="2.F. Product uses as substitutes for ODS")
table_5 <- table_5 %>%
filter(gas %in% c("Emissions of HFCs -  CO2 equivalents (kt) (3)",
"Emissions of PFCs -  CO2 equivalents (kt) ",
"Emissions of  SF6 -  CO2 equivalents (kt) (3)",
"Emissions of NF3 - CO2 equivalents (kt) (3)")) %>%
mutate(gas=ifelse(grepl("HFCs",gas),"hfcs",gas)) %>%
mutate(gas=ifelse(grepl("PFCs",gas),"pfcs",gas)) %>%
mutate(gas=ifelse(grepl("SF6",gas),"sf6",gas)) %>%
mutate(gas=ifelse(grepl("NF3",gas),"nf3",gas))
## merge co2, ch4, n2o, fgases
table <- bind_rows(table_2,table_3,table_4,table_5)
table <- table %>%
select(sector=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES,gas,units,everything()) %>%
filter(!is.na(sector)) %>%
filter(!grepl("Note:",sector))
table <- gather(table,year,value,-sector,-gas,-units)
## deal with NA, NO, IE, NE
table <- table %>%
mutate(value=ifelse(grepl("NA",value),NA,value)) %>%
mutate(value=ifelse(grepl("IE",value),NA,value)) %>%
mutate(value=ifelse(grepl("NE",value),NA,value)) %>%
mutate(value=ifelse(grepl("NO",value),0,value))
## extract sector codes
table <- table %>%
mutate(sector_code=sub("^(\\S+)\\s.*", "\\1", sector)) %>%
mutate(sector=sub("^\\S+\\s(.*)", "\\1", sector))
## remove memo items etc.
table <- table %>%
filter(!sector_code %in% c("Memo","Indirect","Total")) %>%
filter(!grepl("1.D.",sector_code)) %>%
filter(!grepl("5.F.1.",sector_code))
## remove spaces at the beginning of categories
table$sector <- gsub("^\\s+", "", table$sector)
## extract the emissions hierarchy (just the level associated with each sector)
table <- table %>%
mutate(sector_level = map_int(sector_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
## clean up
table <- table %>%
mutate(iso=data_files$country[i]) %>%
select(iso,sector_code,sector_description=sector,sector_level,gas,units,year,value) %>%
mutate(value=as.numeric(value)) %>%
mutate(year=as.numeric(year))
## bind to dataset
data_crts <- bind_rows(data_crts,table)
}
data_crts <- data_crts %>%
arrange(iso,sector_code,sector_description,sector_level,gas,units,year)
## remove trailing spaces in sector descriptions, text within round brackets
data_crts$sector_description <- gsub("\\s+$", "", data_crts$sector_description)
data_crts$sector_code <- gsub("\\s+$", "", data_crts$sector_code)
data_crts$sector_description <- gsub("\\(.*?\\)", "", data_crts$sector_description)
## identify leaf nodes
sectors <- data_crts %>% select(sector_code,sector_level,sector_description) %>% distinct()
sectors <- sectors %>%
mutate(is_leaf = !sapply(sector_code, function(code) {
any(str_detect(setdiff(sector_code, code), paste0("^", str_replace_all(code, "\\.", "\\\\."))))
}))
## propagate sector_lv1
sectors <- sectors %>%
mutate(match = substr(sector_code,1,1)) %>%
left_join(.,sectors %>%
filter(sector_level==1) %>%
mutate(match=substr(sector_code,1,1)) %>%
select(match,sector_lv1=sector_description),
by = join_by(match)) %>%
select(-match)
## propagate sector_lv2
sectors <- sectors %>%
mutate(match = substr(sector_code,1,3)) %>%
left_join(.,sectors %>%
filter(sector_level==2) %>%
mutate(match=substr(sector_code,1,3)) %>%
select(match,sector_lv2=sector_description),
by = join_by(match)) %>%
select(-match)
## clean up sectors (no double counting, all codes separate)
sectors <- sectors %>%
filter(is_leaf==TRUE) %>%
mutate(sector_lv2=ifelse(sector_lv2=="Other",paste0(sector_lv2," (",sector_lv1,")"),sector_lv2)) %>%
mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>%
mutate(sector_lv3=sector_description) %>%
mutate(sector_lv3=ifelse(sector_lv3=="Other",paste0(sector_lv3," (",sector_lv1,")"),sector_lv3)) %>%
select(-sector_description,-is_leaf)
## rejoin
data_crts <- left_join(data_crts,sectors,by=join_by(sector_code,sector_level))
data_crts_totals <- data_crts %>% filter(is.na(sector_lv1))
## are totals correct at lv1?
data_crts_test <- data_crts %>%
filter(!is.na(sector_lv1)) %>%
group_by(iso,sector_lv1,gas,units,year) %>%
summarise(value=sum(value,na.rm=TRUE))
data_crts_test <- left_join(data_crts_test,data_crts_totals %>%
select(iso,gas,units,year,sector_lv1=sector_description,value_totals=value)) %>%
mutate(check = value-value_totals) %>%
filter(is.na(check))
## tidy up sector hierarchy
data_crts <- data_crts %>% filter(!is.na(sector_lv1))
## join AR5 GWPs
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10) %>% select(gas=Species,gwp100_ar5=AR5GWP100) %>% mutate(gas=tolower(gas))
data_crts <- data_crts %>%
left_join(.,gwps,by="gas")
data_crts <- data_crts %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5)) %>%
mutate(value_gwp100=value*gwp100_ar5)
## check units are in kt and convert to t
data_crts <- data_crts %>%
{if (any(!str_starts(.$units, "kt"))) stop("Error: Not all values in the 'units' column start with 'kt'")
else .
} %>%
mutate(value = value / 1000)
data_crts <- data_crts %>%
mutate(units="tCO2e (GWP100 AR5)") %>%
select(-gwp100_ar5,-value) %>%
rename(value=value_gwp100)
## set levels and arrange
data_crts$gas <- as.factor(data_crts$gas)
data_crts$gas <- factor(data_crts$gas,levels=c("co2","ch4","n2o","hfcs","pfcs","nf3","sf6"))
levels(data_crts$gas)
data_crts$gas
data_crts <- data_crts %>% arrange(across(-ncol(data_crts)))
## tidy up file
data_crts <- data_crts %>%
filter(!is.na(sector_lv1)) %>%
mutate(source="UNFCCC CRT 2024") %>%
select(source,iso,sector_code,sector_level,sector_lv1,sector_lv2,sector_lv3,gas,units,year,value)
save(data_crts,file="data/data_crts.RData")
wb <- createWorkbook()
options("openxlsx.numFmt" = "0.00")
date()
??date()
format(Sys.time())
?sys.time
??Sys.time()
sys.date()
sys.Date()
Sys.Date()
"This data file is a compilation of Annex I greenhouse gas emissions inventories, based on the CRT (Common Reporting Table) format. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024) and reformatted their summary reports into a single structured data table. Importantly, I extracted only the 'leaf nodes' in the emissions hierarchy, meaning that all rows for a given country can be safely summed without double counting emissions. Different emissions sectors can also be aggregated using the 'sector_lv1/2/3' columns.",paste0(Sys.Date()),"https://github.com/lambwf/National-GHG-Inventory-Tracking/blob/main/read_crts.Rmd")
info = data.frame(a=c("Author","Contact","Description","Last update","Link to code"),
b=c("William F. Lamb","lamb@mcc-berlin.net","This data file is a compilation of Annex I greenhouse gas emissions inventories, based on the CRT (Common Reporting Table) format. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024) and reformatted their summary reports into a single structured data table. Importantly, I extracted only the 'leaf nodes' in the emissions hierarchy, meaning that all rows for a given country can be safely summed without double counting emissions. Different emissions sectors can also be aggregated using the 'sector_lv1/2/3' columns.",paste0(Sys.Date()),"https://github.com/lambwf/National-GHG-Inventory-Tracking/blob/main/read_crts.Rmd")
info = data.frame(a=c("Author","Contact","Description","Last update","Link to code"),
info = data.frame(a=c("Author","Contact","Description","Last update","Link to code")),
info = data.frame(a=c("Author","Contact","Description","Last update","Link to code"))
View(info)
info = data.frame(b=c("William F. Lamb","lamb@mcc-berlin.net","This data file is a compilation of Annex I greenhouse gas emissions inventories, based on the CRT (Common Reporting Table) format. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024) and reformatted their summary reports into a single structured data table. Importantly, I extracted only the 'leaf nodes' in the emissions hierarchy, meaning that all rows for a given country can be safely summed without double counting emissions. Different emissions sectors can also be aggregated using the 'sector_lv1/2/3' columns.",paste0(Sys.Date()),"https://github.com/lambwf/National-GHG-Inventory-Tracking/blob/main/read_crts.Rmd"))
info = data.frame(a=c("Author","Contact","Description","Last update","Link to code"),b=c("William F. Lamb","lamb@mcc-berlin.net","This data file is a compilation of Annex I greenhouse gas emissions inventories, based on the CRT (Common Reporting Table) format. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024) and reformatted their summary reports into a single structured data table. Importantly, I extracted only the 'leaf nodes' in the emissions hierarchy, meaning that all rows for a given country can be safely summed without double counting emissions. Different emissions sectors can also be aggregated using the 'sector_lv1/2/3' columns.",paste0(Sys.Date()),"https://github.com/lambwf/National-GHG-Inventory-Tracking/blob/main/read_crts.Rmd"))
wb <- createWorkbook()
options("openxlsx.numFmt" = "0.00")
addWorksheet(wb,"info")
addWorksheet(wb,"data")
info = data.frame(a=c("Author","Contact","Description","Last update","Link to code"),b=c("William F. Lamb","lamb@mcc-berlin.net","This data file is a compilation of Annex I greenhouse gas emissions inventories, based on the CRT (Common Reporting Table) format. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024) and reformatted their summary reports into a single structured data table. Importantly, I extracted only the 'leaf nodes' in the emissions hierarchy, meaning that all rows for a given country can be safely summed without double counting emissions. Different emissions sectors can also be aggregated using the 'sector_lv1/2/3' columns.",paste0(Sys.Date()),"https://github.com/lambwf/National-GHG-Inventory-Tracking/blob/main/read_crts.Rmd"))
writeData(wb, sheet = "info", info, colNames = F, rowNames = F)
writeData(wb, sheet = "data", data_crts, colNames = T, rowNames = F)
saveWorkbook(wb,paste0("data/National-GHG-Inventory-Summaries.xlsx"),overwrite=T)
View(sectors)
View(table)
blarg <- table %>% select(sector_code,sector_description,sector_level) %>% distinct()
View(blarg)
sector_summary <- table %>% select(sector_code,sector_description,sector_level) %>% distinct()
View(sector_summary)
sector_summary <- left_join(sector_summary,sectors)
sector_summary <- sector_summary %>%
mutate(sector_description=ifelse(sector_level=2,paste0("  ",sector_description),sector_description))
sector_summary <- sector_summary %>%
mutate(sector_description=ifelse(sector_level==2,paste0("  ",sector_description),sector_description))
sector_summary <- table %>% select(sector_code,sector_description,sector_level) %>% distinct()
sector_summary <- left_join(sector_summary,sectors)
sector_summary <- sector_summary %>%
mutate(sector_description=ifelse(sector_level==2,paste0("  ",sector_description),sector_description))
mutate(sector_description=ifelse(sector_level==3,paste0("    ",sector_description),sector_description))
sector_summary <- table %>% select(sector_code,sector_description,sector_level) %>% distinct()
sector_summary <- left_join(sector_summary,sectors)
sector_summary <- sector_summary %>%
mutate(sector_description=ifelse(sector_level==2,paste0("  ",sector_description),sector_description))
sector_summary <- table %>% select(sector_code,sector_description,sector_level) %>% distinct()
sector_summary <- left_join(sector_summary,sectors)
sector_summary <- sector_summary %>%
mutate(sector_description=ifelse(sector_level==2,paste0("  ",sector_description),sector_description)) %>%
mutate(sector_description=ifelse(sector_level==3,paste0("    ",sector_description),sector_description))
